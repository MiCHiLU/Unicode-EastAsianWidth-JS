// Generated by CoffeeScript 1.6.2
(function() {
  "use strict";  angular.module("unicode_eastasianwidth", []).directive("eastAsianWidth", function() {
    var int, isEmpty;

    isEmpty = function(value) {
      return angular.isUndefined(value) || value === "" || value === null || value !== value;
    };
    int = function(str) {
      return parseInt(str, 10);
    };
    return {
      require: "ngModel",
      restrict: "A",
      link: function(scope, iElement, iAttrs, controller) {
        var maxLengthValidator, maxlength;

        maxlength = int(iAttrs.ngMaxlength || iAttrs.maxlength);
        maxLengthValidator = function(value) {
          if (!isEmpty(value) && unicodeEastAsianWidth.width(value) > maxlength) {
            controller.$setValidity("maxlength", false);
            return void 0;
          } else {
            controller.$setValidity("maxlength", true);
            return value;
          }
        };
        controller.$parsers.push(maxLengthValidator);
        controller.$formatters.push(maxLengthValidator);
      }
    };
  }).filter("truncate", [
    "length", function(length) {
      var int;

      int = function(str) {
        return parseInt(str, 10);
      };
      length = int(length);
      return function(value) {
        return unicodeEastAsianWidth.truncate(value, length, "â€¦");
      };
    }
  ]);

}).call(this);
